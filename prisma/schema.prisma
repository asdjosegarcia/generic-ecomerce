generator client {
    provider = "prisma-client-js" //esto dice que vamos a estar creando codigo para javascript
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Product {
    id              Int               @id @default(autoincrement()) // Int el id es un entero, @id es un identificador unico, (autoincrement()) y se va a ir incrementando
    title           String?           @default("Product")
    price           Float             @default(0.00)
    condition       String            @default("New")
    shipment        Float             @default(0.00) //
    qualification   Float             @default(5)
    previewImg      String            @default("https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.c2t8tS3Bw3wAu29lJZXcKgAAAA%26pid%3DApi&f=1&ipt=152bbe465eda1732e5837221e4a9c09866e36e0f8f0695e54deb8379d78f64b0&ipo=images")
    seller          String? //por el momento no lo agregamos por que no se relacionar usuarios
    createdAt       DateTime          @default(now()) //de tipo fecha, y por defecto va a ser la fecha en la que se ha guardado
    views           Int?              @default(0)
    ProductComplete Productcomplete[]
    //categoria
    category        Category          @relation(fields: [categoryId], references: [id])
    //relation indica relacion con otra tabla,
    //field con que columna de la tabla actual se leraciona, 
    //refetence con que columna de la otra tabla se relaciona 
    categoryId      Int

    // @@unique([id]) //el valor de la columna id sera unico, intentar subir otro igual generaria un error/
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    products Product[] //products es una relación uno a muchos con la entidad Product, indicando que una categoría puede tener varios productos, pero un producto pertenece a una sola categoría.
}

model Productcomplete {
    id          Int     @id
    stock       Int     @default(1)
    description String? //tipo string, ? por que es opcional
    // images      Json?   @default("{ \"image1\": \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpixsector.com%2Fcache%2F517d8be6%2Fav5c8336583e291842624.png&f=1&nofb=1&ipt=f0dd3636f84b1ff677873f0bacc0999feaa87f94ce139855b0cdc836bf7246f3&ipo=images\"}")
    // colors      Json?
    addComplete Product @relation(fields: [id], references: [id])
    //addToComplete es solo un nombre
    //Product el Modelo con el que nos vamos  a relacionar
    //@relation para especificar como se van a arelacionar los datos
    //fields:[] columnas que se utilizan en el mode ProductComplete
    //references:[] columnas de Product que deven coincidir con las columnas especificadas en field:[]
}

// model Productcomments {//nos ilvidamos de esto hasta que pueda manejarlo
//     id         Int      @id
//     // commentId  Int      @id @default(autoincrement())
//     comment    String   @default("")
//     qualification Float @default(5.00)
//     createdAt  DateTime @default(now())
//     addComents Product  @relation(fields: [id], references: [id])
// }
